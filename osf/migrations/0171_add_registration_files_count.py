# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2019-01-18 14:43
from __future__ import unicode_literals
import logging

from django.db import migrations, models
from django_bulk_update.helper import bulk_update

logger = logging.getLogger(__file__)

def add_registration_files_count(state, *args, **kwargs):
    """
    Caches registration files count on Registration object.
    Importing Registration model outside of this method to take advantage of files
    relationship for speed purposes in this migration.  If this model changes significantly,
    this migration may have to be modified in the future so it runs on an empty db.
    """
    Registration = state.get_model('osf', 'registration')
    registrations = Registration.objects.filter(is_deleted=False, files_count__isnull=True)
    BaseFileNode = state.get_model('osf', 'BaseFileNode')
    ContentType = state.get_model('contenttypes', 'ContentType')
    content_type = ContentType.objects.get(app_label='osf', model='abstractnode')
    registrations_to_update = []

    for registration in registrations:
        registration_files = BaseFileNode.objects.filter(
            target_object_id=registration.id,
            target_content_type=content_type,
            type='osf.osfstoragefile',
            deleted_on__isnull=True,
        )
        registration.files_count = registration_files.count()
        registrations_to_update.append(registration)

    bulk_update(registrations_to_update, update_fields=['files_count'], batch_size=5000)
    logger.info('Populated `files_count` on a total of {} registrations'.format(len(registrations_to_update)))


def noop(*args, **kwargs):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('osf', '0170_ensure_schemas'),
    ]

    operations = [
        migrations.AddField(
            model_name='abstractnode',
            name='files_count',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.RunPython(add_registration_files_count, noop)
    ]
